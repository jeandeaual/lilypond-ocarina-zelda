name: build
on:
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Make the output directories
        run: mkdir -p build/{a4,letter,svg,midi,video}
      - name: Fix includes for ly2video
        # ly2video doesn't support include files (it doesn't copy them to its
        # temporary directory), so replace the includes with the files' contents
        # manually
        run: for include in header score; do sed -i -e '/\\include\ \"'"${include}"'\.ily\"/r '"${include}"'.ily' -e '/\\include\ \"'"${include}"'\.ily\"/d' *.ly; done
      - name: Build A4 PDF (Zelda's Lullaby)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/a4 zelda-lullaby.ly
      - name: Build Letter PDF (Zelda's Lullaby)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"letter\" -o build/letter zelda-lullaby.ly
      - name: Build SVG (Zelda's Lullaby)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond --svg -dno-point-and-click -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/svg zelda-lullaby.ly
      - name: Build video (Zelda's Lullaby)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: ly2video -i zelda-lullaby.ly -q 1 -r 300 -o build/video/zelda-lullaby.avi
      - name: Make the video HTML5 compatible (Zelda's Lullaby)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: ffmpeg -i build/video/zelda-lullaby.avi -c:v libx264 -pix_fmt yuv420p -movflags +faststart -c:a aac -b:a 128k -map_channel 0.1.1 -movflags +faststart build/video/zelda-lullaby.mp4
      - name: Build A4 PDF (Epona's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/a4 epona-song.ly
      - name: Build Letter PDF (Epona's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"letter\" -o build/letter epona-song.ly
      - name: Build SVG (Epona's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond --svg -dno-point-and-click -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/svg epona-song.ly
      - name: Build video (Epona's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: ly2video -i epona-song.ly -q 1 -r 300 -o build/video/epona-song.avi
      - name: Make the video HTML5 compatible (Epona's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: ffmpeg -i build/video/epona-song.avi -c:v libx264 -pix_fmt yuv420p -movflags +faststart -c:a aac -b:a 128k -map_channel 0.1.1 -movflags +faststart build/video/epona-song.mp4
      - name: Build A4 PDF (Saria's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/a4 saria-song.ly
      - name: Build Letter PDF (Saria's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"letter\" -o build/letter saria-song.ly
      - name: Build SVG (Saria's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond --svg -dno-point-and-click -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/svg saria-song.ly
      - name: Build video (Saria's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: ly2video -i saria-song.ly -q 1 -r 300 -o build/video/saria-song.avi
      - name: Make the video HTML5 compatible (Saria's Song)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: ffmpeg -i build/video/saria-song.avi -c:v libx264 -pix_fmt yuv420p -movflags +faststart -c:a aac -b:a 128k -map_channel 0.1.1 -movflags +faststart build/video/saria-song.mp4
      - name: Build A4 PDF (Song of Storms)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/a4 song-of-storms.ly
      - name: Build Letter PDF (Song of Storms)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond -dno-point-and-click -dembed-source-code -dmidi-extension="midi" -dpaper-size=\"letter\" -o build/letter song-of-storms.ly
      - name: Build SVG (Song of Storms)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: lilypond --svg -dno-point-and-click -dmidi-extension="midi" -dpaper-size=\"a4\" -o build/svg song-of-storms.ly
      - name: Build video (Song of Storms)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: ly2video -i song-of-storms.ly -q 1 -r 300 -o build/video/song-of-storms.avi
      - name: Make the video HTML5 compatible (Song of Storms)
        uses: docker://jeandeaual/lilypond:devel-ly2video
        with:
          args: ffmpeg -i build/video/song-of-storms.avi -c:v libx264 -pix_fmt yuv420p -movflags +faststart -c:a aac -b:a 128k -map_channel 0.1.1 -movflags +faststart build/video/song-of-storms.mp4
      - name: Remove extra video file(s)
        run: rm build/video/*.avi
      - name: Remove extra MIDI files
        run: |
          cp build/a4/*.midi build/midi/
          find . -depth -maxdepth 3 -regex '.*\/midi\/.*' -prune -o -type f -name '*.midi' -delete
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Upload A4 artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: a4-${{ steps.slug.outputs.sha7 }}
          path: build/a4
      - name: Upload Letter artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: letter-${{ steps.slug.outputs.sha7 }}
          path: build/letter
      - name: Upload SVG artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: svg-${{ steps.slug.outputs.sha7 }}
          path: build/svg
      - name: Upload MIDI artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: midi-${{ steps.slug.outputs.sha7 }}
          path: build/midi
      - name: Upload video artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: video-${{ steps.slug.outputs.sha7 }}
          path: build/video
